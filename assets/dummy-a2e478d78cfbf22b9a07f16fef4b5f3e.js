"use strict";define("dummy/app",["exports","ember","ember/resolver","ember/load-initializers","dummy/config/environment"],function(e,t,n,o,i){var r;t["default"].MODEL_FACTORY_INJECTIONS=!0,r=t["default"].Application.extend({modulePrefix:i["default"].modulePrefix,podModulePrefix:i["default"].podModulePrefix,Resolver:n["default"]}),o["default"](r,i["default"].modulePrefix),e["default"]=r}),define("dummy/components/app-version",["exports","ember-cli-app-version/components/app-version","dummy/config/environment"],function(e,t,n){var o=n["default"].APP,i=o.name,r=o.version;e["default"]=t["default"].extend({version:r,name:i})}),define("dummy/components/dummy-list-item",["exports","ember"],function(e,t){e["default"]=t["default"].Component.extend({classNames:["dummy-list-item"],onMutation:function(e){console.log("onMutation"),e.forEach(function(e){console.log(e.type)})}})}),define("dummy/components/dummy-list",["exports","ember","dummy/mixins/mutation-observer"],function(e,t,n){e["default"]=t["default"].Component.extend(n["default"],{classNames:["dummy-list"],onMutation:function(e){e.forEach(function(e){console.log(e.type,e.oldValue),e.addedNodes.forEach(function(e){console.log(e)})})}})}),define("dummy/controllers/array",["exports","ember"],function(e,t){e["default"]=t["default"].Controller}),define("dummy/controllers/object",["exports","ember"],function(e,t){e["default"]=t["default"].Controller}),define("dummy/initializers/app-version",["exports","ember-cli-app-version/initializer-factory","dummy/config/environment"],function(e,t,n){var o=n["default"].APP,i=o.name,r=o.version;e["default"]={name:"App Version",initialize:t["default"](i,r)}}),define("dummy/initializers/export-application-global",["exports","ember","dummy/config/environment"],function(e,t,n){function o(){var e=arguments[1]||arguments[0];if(n["default"].exportApplicationGlobal!==!1){var o,i=n["default"].exportApplicationGlobal;o="string"==typeof i?i:t["default"].String.classify(n["default"].modulePrefix),window[o]||(window[o]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete window[o]}}))}}e.initialize=o,e["default"]={name:"export-application-global",initialize:o}}),define("dummy/initializers/mutation-observer",["exports","ember-cli-mutation-observer/initializers/mutation-observer"],function(e,t){e["default"]=t["default"],e.initialize=t.initialize}),define("dummy/mixins/mutation-observer",["exports","ember-cli-mutation-observer/mixins/mutation-observer"],function(e,t){e["default"]=t["default"]}),define("dummy/router",["exports","ember","dummy/config/environment"],function(e,t,n){var o=t["default"].Router.extend({location:n["default"].locationType});o.map(function(){}),e["default"]=o}),define("dummy/templates/application",["exports"],function(e){e["default"]=Ember.HTMLBars.template(function(){return{meta:{revision:"Ember@1.13.7",loc:{source:null,start:{line:1,column:0},end:{line:3,column:10}},moduleName:"dummy/templates/application.hbs"},arity:0,cachedFragment:null,hasRendered:!1,buildFragment:function(e){var t=e.createDocumentFragment(),n=e.createComment("");e.appendChild(t,n);var n=e.createTextNode("\n");e.appendChild(t,n);var n=e.createComment("");e.appendChild(t,n);var n=e.createTextNode("\n");e.appendChild(t,n);var n=e.createComment("");return e.appendChild(t,n),t},buildRenderNodes:function(e,t,n){var o=new Array(3);return o[0]=e.createMorphAt(t,0,0,n),o[1]=e.createMorphAt(t,2,2,n),o[2]=e.createMorphAt(t,4,4,n),e.insertBoundary(t,0),e.insertBoundary(t,null),o},statements:[["content","dummy-list",["loc",[null,[1,0],[1,14]]]],["content","dummy-list-item",["loc",[null,[2,0],[2,19]]]],["content","outlet",["loc",[null,[3,0],[3,10]]]]],locals:[],templates:[]}}())}),define("dummy/config/environment",["ember"],function(e){var t="dummy";try{var n=t+"/config/environment",o=e["default"].$('meta[name="'+n+'"]').attr("content"),i=JSON.parse(unescape(o));return{"default":i}}catch(r){throw new Error('Could not read config from meta tag with name "'+n+'".')}}),runningTests?require("dummy/tests/test-helper"):require("dummy/app")["default"].create({name:"ember-cli-mutation-observer",version:"0.1.2+6f5fc804"});